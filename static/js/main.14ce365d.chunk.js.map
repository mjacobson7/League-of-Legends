{"version":3,"sources":["components/Dropdown.js","components/Stats.js","App.js","serviceWorker.js","index.js"],"names":["Dropdown","props","matches","map","match","react_default","a","createElement","key","gameId","value","onChange","event","changed","Stats","_ref","matchData","spells","spell","id","name","runes","rune","itemsPurchased","item","i","outcome","gameDuration","kda","championName","championLevel","totalCreeps","creepScorePerMinute","App","state","searchVal","summoner","error","searchSummonerHandler","_callee","regenerator_default","wrap","_context","prev","next","_this","setState","axios","get","sent","data","accountId","t0","console","log","stop","this","matchSelectHandler","_callee2","_context2","target","_this2","className","maxLength","searchValHandler","placeholder","onClick","components_Dropdown","components_Stats","Component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.14ce365d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Dropdown = (props) => {\n    let matches = null;\n    \n    if (props.matches) {\n        matches = props.matches.map(match => {\n            return <option key={match.gameId} value={match.gameId}>{match.gameId}</option>\n        })\n\n        return (\n            <select onChange={(event) => props.changed(event)}>\n                <option>Select a Game ID</option>\n                {matches}\n            </select>\n        )\n    }\n\n    return null;\n\n\n\n\n}\n\nexport default Dropdown;","import React from 'react';\n\nconst Stats = ({ matchData }) => {\n    if (!matchData) {\n        return null;\n    } else {\n        \n        const spells = matchData.spells.map(spell => {\n            return <li key={spell.id}>{spell.name}</li>\n        })\n\n        const runes = matchData.runes.map(rune => {\n            return <li key={rune.id}>{rune.name}</li>\n        })\n\n        const itemsPurchased = matchData.itemsPurchased.map((item, i) => {\n            return <li key={i}>{item.name}</li>\n        })\n\n\n\n\n\n        return (\n            <div>\n                <div>\n                    <label>Outcome: </label>\n                    <span>{matchData.outcome ? 'Victory' : 'Defeat'}</span>\n                </div>\n\n                <div>\n                    <label>Game Duration: </label>\n                    <span>{matchData.gameDuration}</span>\n                </div>\n\n                <div>\n                    <label>Summoner Spells: </label>\n                    <ol>{spells}</ol>\n                </div>\n\n                <div>\n                    <label>Summoner Runes: </label>\n                    <ol>{runes}</ol>\n                </div>\n\n                <div>\n                    <label>K/DA: </label>\n                    <span>{matchData.kda}</span>\n                </div>\n\n                <div>\n                    <label>Items Purchased: </label>\n                    <ol>{itemsPurchased}</ol>\n                </div>\n\n                <div>\n                    <label>Champion Name: </label>\n                    <span>{matchData.championName}</span>\n                </div>\n\n                <div>\n                    <label>Champion Level: </label>\n                    <span>{matchData.championLevel}</span>\n                </div>\n\n                <div>\n                    <label>Total Creep Score: </label>\n                    <span>{matchData.totalCreeps}</span>\n                </div>\n\n                <div>\n                    <label>Creep Score / Minute: </label>\n                    <span>{matchData.creepScorePerMinute}</span>\n                </div>\n\n\n\n                {/* summoner name\n\n\n                champion name */}\n\n\n\n            </div>\n        )\n\n    }\n\n\n}\n\nexport default Stats;","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Dropdown from './components/Dropdown';\nimport Stats from './components/Stats';\n\nclass App extends Component {\n\n  state = {\n    searchVal: '',\n    summoner: null,\n    matches: null,\n    matchData: null,\n    error: false\n  }\n\n  searchValHandler(event) {\n    this.setState({ searchVal: event.target.value })\n  }\n\n  searchSummonerHandler = async () => {\n    try {\n      this.setState({ matchData: null })\n      const summoner = await axios.get('/getSummonerByName/' + this.state.searchVal)\n      const matches = await axios.get('/getSummonerMatches/' + summoner.data.accountId);\n      this.setState({ summoner: summoner.data, matches: matches.data, error: false })\n\n    } catch (e) {\n      this.setState({ error: true })\n      console.log(e);\n    }\n  }\n\n  matchSelectHandler = async (event) => {\n    const match = await axios.get('/getMatchById/' + event.target.value + '/' + this.state.summoner.accountId);\n    this.setState({ matchData: match.data })\n  }\n\n\n\n  render() {\n    let error;\n    if (this.state.error) {\n      error = <p>There was an unexpected error. Please try again.</p>\n    }\n\n    let summoner;\n    if (this.state.summoner) {\n      summoner = <h5>Summoner Name: {this.state.summoner.name}</h5>\n    }\n\n\n\n    return (\n      <div className=\"App\">\n        <div>\n          <input maxLength=\"16\" onChange={(event) => this.searchValHandler(event)} placeholder=\"Search Summoner\" />\n\n          <button onClick={this.searchSummonerHandler}>Search</button>\n          {error}\n\n          <Dropdown matches={this.state.matches} changed={this.matchSelectHandler} />\n          {summoner}\n          <Stats matchData={this.state.matchData} />\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}